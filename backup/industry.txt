"use client";

import { useEffect, useState, useRef } from "react";
import { motion, useScroll, useTransform, useInView } from "framer-motion";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import ScrollIndicator from "@/components/ScrollIndicator";
import AICursor from "@/components/AICursor";
import Contact from "@/components/Contact";
import Link from "next/link";
import Image from "next/image";

// Animation variants for sections
const sectionVariants = {
  hidden: { opacity: 0, y: 50 },
  visible: { 
    opacity: 1, 
    y: 0,
    transition: { 
      duration: 0.8, 
      ease: "easeOut" 
    }
  }
};

// Animation variants for staggered children
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.1
    }
  }
};

// Tech-themed digital counter component
const DigitalCounter = ({ number, label }: { number: string; label: string }) => (
  <div className="flex flex-col items-center">
    <div className="text-2xl font-mono bg-gradient-to-b from-gray-800 to-gray-900 
                  border border-gray-700 rounded-md px-3 py-1 shadow-inner shadow-cyan-500/10
                  relative overflow-hidden">
      <span className="relative z-10 bg-gradient-to-r from-cyan-400 to-purple-600 bg-clip-text text-transparent font-bold">
        {number}
      </span>
      <div className="absolute inset-0 grid grid-cols-12 opacity-20 pointer-events-none">
        {Array(12).fill(0).map((_, i) => (
          <div key={i} className="h-full w-px bg-gradient-to-b from-transparent via-cyan-500/20 to-transparent"></div>
        ))}
      </div>
    </div>
    <span className="text-xs text-gray-400 mt-1 font-mono uppercase tracking-wider">{label}</span>
  </div>
);

// Circuit pattern SVG for tech backgrounds
const CircuitPattern = () => (
  <svg
    className="absolute inset-0 w-full h-full opacity-5"
    viewBox="0 0 100 100"
    preserveAspectRatio="none"
  >
    <pattern id="circuit" patternUnits="userSpaceOnUse" width="20" height="20" patternTransform="rotate(0)">
      <path
        d="M10,0 L10,5 M10,10 L10,15 M10,15 L15,15 M0,10 L5,10 M10,10 L15,10"
        stroke="currentColor"
        strokeWidth="0.5"
        fill="none"
      />
      <circle cx="10" cy="10" r="1.5" fill="currentColor" />
      <circle cx="10" cy="0" r="0.65" fill="currentColor" />
      <circle cx="0" cy="10" r="0.65" fill="currentColor" />
      <circle cx="10" cy="20" r="0.65" fill="currentColor" />
      <circle cx="20" cy="10" r="0.65" fill="currentColor" />
    </pattern>
    <rect x="0" y="0" width="100%" height="100%" fill="url(#circuit)" />
  </svg>
);

// Binary background element
const BinaryBackground = () => (
  <div className="absolute inset-0 overflow-hidden opacity-5 pointer-events-none font-mono text-[8px] text-cyan-500">
    {Array(20).fill(0).map((_, i) => (
      <div key={i} className="select-none whitespace-nowrap">
        {Array(500).fill(0).map((_, j) => (
          <span key={j}>{Math.round(Math.random())}</span>
        ))}
      </div>
    ))}
  </div>
);

// Completely redesigned IndustrySection component with tech theme
const IndustrySection = ({ 
  title, 
  subtitle, 
  description, 
  features,
  impact = "",
  gradient = "from-cyan-400 to-purple-600",
  bgGradient = "from-gray-900/40 to-black/40",
  icon = "🔷",
  index = 1
}: {
  title: string;
  subtitle: string;
  description?: string;
  features: string[];
  impact?: string;
  gradient?: string;
  bgGradient?: string;
  icon?: string;
  index?: number;
}) => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, amount: 0.2 });
  
  return (
    <motion.section 
      ref={ref}
      className="py-24 px-4 sm:px-8 relative overflow-hidden"
      initial="hidden"
      animate={isInView ? "visible" : "hidden"}
      variants={sectionVariants}
    >
      {/* Tech-themed background elements */}
      <div className="absolute inset-0 bg-gradient-to-b from-black via-gray-900/30 to-black"></div>
      <CircuitPattern />
      
      <div className="absolute top-0 left-0 w-full h-px bg-gradient-to-r from-cyan-500/40 via-purple-500/40 to-cyan-500/40"></div>
      <div className="absolute bottom-0 left-0 w-full h-px bg-gradient-to-r from-purple-500/40 via-cyan-500/40 to-purple-500/40"></div>
      
      {/* Grid lines */}
      <div className="absolute inset-0 bg-[linear-gradient(rgba(255,255,255,0.03)_1px,transparent_1px),linear-gradient(to_right,rgba(255,255,255,0.03)_1px,transparent_1px)] bg-[size:32px_32px]"></div>
      
      {/* Digital section number */}
      <div className="absolute left-4 lg:left-8 top-4 lg:top-8 font-mono text-xs lg:text-sm px-2 py-1 bg-gradient-to-r from-gray-900 to-black border border-gray-800 rounded-md">
        <span className="text-gray-600">&lt;</span>
        <span className={`bg-gradient-to-r ${gradient} bg-clip-text text-transparent`}>section</span>
        <span className="text-gray-600">-</span>
        <span className={`bg-gradient-to-r ${gradient} bg-clip-text text-transparent`}>{index.toString().padStart(2, '0')}</span>
        <span className="text-gray-600">&gt;</span>
      </div>

      <div className="max-w-6xl mx-auto relative z-10">
        {/* Modern asymmetrical layout */}
        <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16">
          {/* Left sidebar with tech elements */}
          <div className="lg:col-span-3 order-2 lg:order-1">
            <div className="sticky top-24 flex flex-col space-y-6">
              {/* Digital icon display */}
              <div className={`h-16 w-16 rounded-xl bg-gradient-to-br ${gradient} p-0.5 shadow-lg shadow-purple-500/20 hidden lg:block`}>
                <div className="h-full w-full flex items-center justify-center bg-gray-900 rounded-[10px] text-3xl">
                  {icon}
                </div>
              </div>
              
              {/* Code-styled section info */}
              <div className="bg-gray-900/70 backdrop-blur-md border border-gray-800 rounded-lg p-4 font-mono text-xs lg:text-sm shadow-lg">
                <div className="flex items-center space-x-1.5 mb-3">
                  <div className="w-2.5 h-2.5 rounded-full bg-red-500"></div>
                  <div className="w-2.5 h-2.5 rounded-full bg-yellow-500"></div>
                  <div className="w-2.5 h-2.5 rounded-full bg-green-500"></div>
                </div>
                <div className="space-y-1 text-gray-400">
                  <div><span className="text-pink-400">const</span> <span className="text-cyan-400">section</span> <span className="text-white">=</span> <span className="text-yellow-300">{'{'}</span></div>
                  <div className="pl-4"><span className="text-green-400">id</span><span className="text-white">:</span> <span className="text-purple-300">'{index.toString().padStart(2, '0')}'</span>,</div>
                  <div className="pl-4"><span className="text-green-400">title</span><span className="text-white">:</span> <span className="text-purple-300">'{title}'</span>,</div>
                  <div className="pl-4"><span className="text-green-400">type</span><span className="text-white">:</span> <span className="text-purple-300">'industry'</span></div>
                  <div><span className="text-yellow-300">{'}'}</span>;</div>
                </div>
              </div>
              
              {/* Tech metrics */}
              <div className="hidden lg:flex flex-col space-y-4">
                <DigitalCounter number="99.9%" label="EFFICIENCY" />
                <DigitalCounter number="247+" label="CLIENTS" />
                <DigitalCounter number="24/7" label="SUPPORT" />
              </div>
            </div>
          </div>
          
          {/* Main content area */}
          <div className="lg:col-span-9 order-1 lg:order-2">
            <div className="relative">
              {/* Decorative tech elements */}
              <div className="absolute -left-16 top-1/4 w-40 h-40 bg-cyan-500/10 rounded-full filter blur-3xl hidden lg:block"></div>
              <div className="absolute -right-16 bottom-1/4 w-40 h-40 bg-purple-500/10 rounded-full filter blur-3xl hidden lg:block"></div>
              
              {/* Title area with digital design elements */}
              <div className="relative mb-12">
                <div className="flex flex-wrap items-center mb-3">
                  <div className={`h-10 w-10 rounded-lg bg-gradient-to-br ${gradient} flex items-center justify-center lg:hidden mr-3`}>
                    <span className="text-xl">{icon}</span>
                  </div>
                  
                  <div className="flex-1">
                    <motion.h2 
                      className="text-3xl sm:text-4xl font-bold"
                      initial={{ opacity: 0, x: -20 }}
                      animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -20 }}
                      transition={{ duration: 0.5, delay: 0.2 }}
                    >
                      <span className={`bg-gradient-to-r ${gradient} bg-clip-text text-transparent inline-block`}>
                        {title}
                      </span>
                    </motion.h2>
                  </div>
                  
                  {/* Mobile tech metrics */}
                  <div className="flex space-x-4 mt-4 lg:hidden">
                    <DigitalCounter number="99.9%" label="EFFICIENCY" />
                    <DigitalCounter number="24/7" label="SUPPORT" />
                  </div>
                </div>
                
                <motion.h3 
                  className="text-xl sm:text-2xl text-gray-100 font-medium mb-6"
                  initial={{ opacity: 0, x: -20 }}
                  animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -20 }}
                  transition={{ duration: 0.5, delay: 0.3 }}
                >
                  {subtitle}
                </motion.h3>
                
                {/* Code-styled underline */}
                <div className="flex items-center space-x-2 mb-8">
                  <div className={`h-0.5 w-16 bg-gradient-to-r ${gradient}`}></div>
                  <div className="font-mono text-xs text-gray-500">/* {index.toString().padStart(2, '0')} */</div>
                  <div className="h-px flex-1 bg-gray-800"></div>
                </div>
              </div>
              
              {/* Description with tech styling */}
              {description && (
                <motion.div 
                  className="mb-12 relative"
                  initial={{ opacity: 0, y: 20 }}
                  animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                  transition={{ duration: 0.6, delay: 0.4 }}
                >
                  <div className="absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b from-transparent via-cyan-500/30 to-transparent"></div>
                  <p className="text-lg text-gray-300 pl-6 leading-relaxed max-w-4xl">
                    {description}
                  </p>
                </motion.div>
              )}
              
              {/* Features with code-styled list */}
              <motion.div 
                className="space-y-6 mb-12"
                variants={containerVariants}
                initial="hidden"
                animate={isInView ? "visible" : "hidden"}
              >
                {features.map((feature, i) => (
                  <motion.div 
                    key={i}
                    className="relative group"
                    variants={{
                      hidden: { opacity: 0, x: -20 },
                      visible: { 
                        opacity: 1, 
                        x: 0,
                        transition: { duration: 0.5, delay: i * 0.1 }
                      }
                    }}
                  >
                    <div className="absolute -left-2 -top-2 -bottom-2 -right-2 bg-gradient-to-r from-gray-900 to-black rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    
                    <div className="flex items-start relative z-10 group-hover:translate-y-0.5 transition-transform duration-300">
                      {/* Tech-themed bullet */}
                      <div className="flex-shrink-0 mr-4 font-mono">
                        <span className={`inline-flex w-8 h-8 rounded-md border border-gray-700 bg-gray-900 items-center justify-center 
                                       text-sm bg-gradient-to-r ${gradient} bg-clip-text text-transparent group-hover:border-cyan-600 
                                       transition-colors duration-300`}>
                          {(i + 1).toString().padStart(2, '0')}
                        </span>
                      </div>
                      
                      {/* Feature content with code styling */}
                      <div className="flex-1 pt-1">
                        <p className="text-lg text-gray-200 group-hover:text-white transition-colors duration-300">
                          {feature}
                        </p>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </motion.div>
              
              {/* Impact section with terminal styling */}
              {impact && (
                <motion.div 
                  className="relative mt-12 overflow-hidden"
                  initial={{ opacity: 0, y: 30 }}
                  animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
                  transition={{ duration: 0.7, delay: 0.6 }}
                >
                  <div className="bg-gray-900/80 backdrop-blur-md border border-gray-800 rounded-lg overflow-hidden shadow-xl">
                    {/* Terminal header */}
                    <div className="bg-gray-800 px-4 py-2 flex items-center">
                      <div className="flex items-center space-x-1.5">
                        <div className="w-3 h-3 rounded-full bg-red-500"></div>
                        <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
                        <div className="w-3 h-3 rounded-full bg-green-500"></div>
                      </div>
                      <div className="flex-1 text-center font-mono text-xs text-gray-400">impact-analysis.sh</div>
                    </div>
                    
                    {/* Terminal content */}
                    <div className="p-6 font-mono relative overflow-hidden">
                      <BinaryBackground />
                      
                      <div className="relative z-10">
                        <div className="text-gray-400 mb-2">$ ./analyze --module impact --section {index.toString().padStart(2, '0')}</div>
                        <div className="text-gray-400 mb-2">Analyzing impact metrics...</div>
                        <div className="text-gray-400 mb-4">[████████████████████] 100% complete</div>
                        
                        <div className="text-cyan-400 mb-2"> Impact Assessment:</div>
                        <div className="text-white pl-4 border-l-2 border-cyan-500/30 py-2">{impact}</div>
                        
                        <div className="text-gray-400 mt-4 flex items-center">
                          <div className="w-2 h-4 bg-gray-400 animate-pulse mr-1"></div>
                        </div>
                      </div>
                    </div>
                  </div>
                </motion.div>
              )}
            </div>
          </div>
        </div>
      </div>
    </motion.section>
  );
};

// Digital code-styled hero component
const TechHero = () => {
  return (
    <section className="relative py-32 px-4 sm:px-8 overflow-hidden">
      {/* Tech-themed background */}
      <div className="absolute inset-0 bg-gradient-to-b from-black via-gray-900/50 to-black z-0"></div>
      <CircuitPattern />
      
      {/* Grid decoration */}
      <div className="absolute inset-0 bg-[linear-gradient(rgba(255,255,255,0.03)_1px,transparent_1px),linear-gradient(to_right,rgba(255,255,255,0.03)_1px,transparent_1px)] bg-[size:32px_32px]"></div>
      
      {/* Digital particles */}
      <div className="absolute inset-0 overflow-hidden">
        {Array(10).fill(0).map((_, i) => (
          <div 
            key={i} 
            className={`absolute bg-cyan-500 rounded-full opacity-${Math.random() > 0.5 ? 10 : 20}`}
            style={{
              width: `${Math.random() * 3 + 1}px`,
              height: `${Math.random() * 3 + 1}px`,
              top: `${Math.random() * 100}%`,
              left: `${Math.random() * 100}%`,
              boxShadow: '0 0 8px 2px rgba(76, 201, 240, 0.3)',
              animation: `float ${Math.random() * 8 + 12}s linear infinite`
            }}
          ></div>
        ))}
      </div>
      
      <div className="max-w-6xl mx-auto relative z-10">
        <div className="flex flex-col items-center text-center mb-12">
          {/* Digital badge */}
          <motion.div 
            className="mb-6 inline-flex h-8 rounded-full bg-gradient-to-r from-gray-800 to-gray-900 border border-gray-700 px-4 items-center"
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
          >
            <span className="font-mono text-xs text-gray-400">
              <span className="text-cyan-400">&lt;</span>
              ISLABS
              <span className="text-cyan-400">/&gt;</span>
            </span>
          </motion.div>
          
          <motion.h1 
            className="text-5xl sm:text-6xl lg:text-7xl font-bold mb-6 leading-tight"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
          >
            <span className="bg-gradient-to-r from-cyan-400 to-purple-600 bg-clip-text text-transparent inline-block">
              Industry Solutions
            </span>
          </motion.h1>
          
          <motion.div 
            className="max-w-3xl mx-auto mb-10"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.3 }}
          >
            <p className="text-xl sm:text-2xl text-gray-300 leading-relaxed">
              Revolutionizing industries with cutting-edge
              <span className="mx-2 inline-block px-2 py-1 bg-cyan-900/30 text-cyan-400 font-mono rounded border border-cyan-800/50">AI</span>
              &
              <span className="ml-2 inline-block px-2 py-1 bg-purple-900/30 text-purple-400 font-mono rounded border border-purple-800/50">blockchain</span>
              technology solutions
            </p>
          </motion.div>
          
          {/* Code-styled metrics */}
          <motion.div 
            className="flex flex-wrap justify-center gap-8 mb-12"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
          >
            <div className="bg-gray-900/70 backdrop-blur-md border border-gray-800 rounded-lg p-4">
              <div className="font-mono text-xs text-gray-500 mb-1">// Industries</div>
              <div className="text-3xl font-bold bg-gradient-to-r from-cyan-400 to-blue-600 bg-clip-text text-transparent">10+</div>
            </div>
            
            <div className="bg-gray-900/70 backdrop-blur-md border border-gray-800 rounded-lg p-4">
              <div className="font-mono text-xs text-gray-500 mb-1">// Solutions</div>
              <div className="text-3xl font-bold bg-gradient-to-r from-blue-400 to-cyan-600 bg-clip-text text-transparent">25+</div>
            </div>
            
            <div className="bg-gray-900/70 backdrop-blur-md border border-gray-800 rounded-lg p-4">
              <div className="font-mono text-xs text-gray-500 mb-1">// Clients</div>
              <div className="text-3xl font-bold bg-gradient-to-r from-purple-400 to-pink-600 bg-clip-text text-transparent">500+</div>
            </div>
          </motion.div>
          
          {/* CTA buttons */}
          <motion.div
            className="flex flex-wrap justify-center gap-4"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.5 }}
          >
            <Link 
              href="/contact"
              className="group relative px-8 py-4 bg-gradient-to-r from-cyan-500 to-purple-600 rounded-lg text-white font-medium 
                      hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-300 overflow-hidden"
            >
              <span className="relative z-10">Schedule a Consultation</span>
              <div className="absolute inset-0 bg-gradient-to-r from-cyan-500 to-purple-600 opacity-0 group-hover:opacity-100 transition-opacity duration-500 bg-[length:200%_200%] bg-[position:0%_0%] group-hover:bg-[position:100%_100%]"></div>
            </Link>
            
            <Link 
              href="/products"
              className="px-8 py-4 bg-gray-900 border border-gray-700 rounded-lg text-white font-medium 
                      hover:bg-gray-800 hover:border-gray-600 transition-all duration-300 relative group overflow-hidden"
            >
              <span className="relative z-10">View All Products</span>
            </Link>
          </motion.div>
        </div>
        
        {/* Terminal-style code animation */}
        <motion.div 
          className="relative max-w-3xl mx-auto"
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 1, delay: 0.7 }}
        >
          <div className="bg-gray-900/80 backdrop-blur-md border border-gray-800 rounded-lg overflow-hidden shadow-xl">
            {/* Terminal header */}
            <div className="bg-gray-800 px-4 py-2 flex items-center">
              <div className="flex items-center space-x-1.5">
                <div className="w-3 h-3 rounded-full bg-red-500"></div>
                <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
                <div className="w-3 h-3 rounded-full bg-green-500"></div>
              </div>
              <div className="flex-1 text-center font-mono text-xs text-gray-400">islabs-technologies.sh</div>
            </div>
            
            {/* Terminal typing animation */}
            <div className="p-6 font-mono text-sm relative">
              <BinaryBackground />
              
              <div className="relative z-10">
                <div className="text-gray-400 mb-2">$ ./islabs-cli --list-technologies</div>
                <div className="text-cyan-400 mb-2"> Core technologies:</div>
                <div className="pl-4 text-purple-400 mb-1">- Artificial Intelligence</div>
                <div className="pl-4 text-purple-400 mb-1">- Blockchain & Distributed Ledger</div>
                <div className="pl-4 text-purple-400 mb-1">- Cloud Architecture</div>
                <div className="pl-4 text-purple-400 mb-3">- Advanced Data Analytics</div>
                
                <div className="text-gray-400 mb-2">$ ./islabs-cli --explore-industries</div>
                <div className="text-cyan-400 mb-2"> Industry Solutions:</div>
                <div className="pl-4 text-yellow-400 mb-1">- Healthcare</div>
                <div className="pl-4 text-yellow-400 mb-1">- Education</div>
                <div className="pl-4 text-yellow-400 mb-1">- Supply Chain & Logistics</div>
                <div className="pl-4 text-yellow-400 mb-1">- Retail & E-commerce</div>
                
                <div className="text-gray-400 mt-4 flex items-center">
                  <div className="w-2 h-4 bg-gray-400 animate-pulse mr-1"></div>
                  <span className="animate-pulse">_</span>
                </div>
              </div>
            </div>
          </div>
          
          {/* SVG connection lines */}
          <svg className="absolute -bottom-10 left-1/2 transform -translate-x-1/2" width="40" height="40" viewBox="0 0 40 40" fill="none">
            <path d="M20 0V40" stroke="url(#grad1)" strokeWidth="1" strokeDasharray="4 4" />
            <defs>
              <linearGradient id="grad1" x1="0%" y1="0%" x2="0%" y2="100%">
                <stop offset="0%" stopColor="#4CC9F0" stopOpacity="0.8" />
                <stop offset="100%" stopColor="#4CC9F0" stopOpacity="0" />
              </linearGradient>
            </defs>
          </svg>
        </motion.div>
      </div>
      
      {/* Scroll indicator */}
      <div className="absolute bottom-8 left-0 right-0 flex justify-center animate-bounce">
        <div className="w-6 h-10 rounded-full border-2 border-gray-400 flex justify-center">
          <div className="w-1 h-2 bg-white rounded-full mt-2 animate-scroll-indicator"></div>
        </div>
      </div>
      
      <style jsx>{`
        @keyframes float {
          0% {
            transform: translateY(0);
          }
          50% {
            transform: translateY(-100vh);
          }
          100% {
            transform: translateY(-200vh);
          }
        }
        @keyframes scroll-indicator {
          0% {
            opacity: 1;
            transform: translateY(0);
          }
          75% {
            opacity: 0;
            transform: translateY(6px);
          }
          100% {
            opacity: 0;
            transform: translateY(0);
          }
        }
      `}</style>
    </section>
  );
};

// Tech-themed CTA component
const TechCTA = () => (
  <section className="py-24 px-4 sm:px-8 relative overflow-hidden">
    {/* Tech-themed background */}
    <div className="absolute inset-0 bg-gradient-to-b from-black via-gray-900/50 to-black"></div>
    <CircuitPattern />
    
    <div className="max-w-6xl mx-auto relative z-10">
      <div className="bg-gradient-to-r from-gray-900/90 to-black/90 backdrop-blur-lg border border-gray-800 rounded-xl overflow-hidden shadow-2xl">
        <div className="grid grid-cols-1 lg:grid-cols-5">
          {/* Left terminal section */}
          <div className="lg:col-span-2 bg-gray-900 p-6">
            <div className="font-mono mb-4 flex items-center">
              <span className="w-3 h-3 rounded-full bg-red-500 mr-2"></span>
              <span className="w-3 h-3 rounded-full bg-yellow-500 mr-2"></span>
              <span className="w-3 h-3 rounded-full bg-green-500 mr-2"></span>
              <span className="text-xs text-gray-400">deployment.sh</span>
            </div>
            
            <div className="font-mono text-sm text-gray-300 space-y-2">
              <div className="text-gray-400">$ islabs deploy --solution</div>
              <div className="text-cyan-400"> Enter industry:</div>
              <div className="text-white">{'>'} <span className="animate-pulse">_</span></div>
              <div className="text-cyan-400 mt-4"> Ready to transform your:</div>
              <div className="pl-4">
                <span className="text-purple-400">✓</span> Business Processes
              </div>
              <div className="pl-4">
                <span className="text-purple-400">✓</span> Technology Stack
              </div>
              <div className="pl-4">
                <span className="text-purple-400">✓</span> Customer Experience
              </div>
              <div className="pl-4">
                <span className="text-purple-400">✓</span> Data Security
              </div>
              <div className="text-gray-400 mt-4">$ ./start-transformation</div>
            </div>
          </div>
          
          {/* Right content section */}
          <div className="lg:col-span-3 p-8 lg:p-12">
            <div className="mb-6 inline-flex h-8 rounded-full bg-gradient-to-r from-cyan-500/20 to-purple-600/20 border border-cyan-500/30 px-4 items-center">
              <span className="font-mono text-xs text-cyan-400">INNOVATION_STARTS_HERE</span>
            </div>
            
            <h2 className="text-3xl lg:text-4xl font-bold mb-6">
              <span className="bg-gradient-to-r from-cyan-400 to-purple-600 bg-clip-text text-transparent">
                Transform Your Industry With ISLABS
              </span>
            </h2>
            
            <p className="text-lg text-gray-300 mb-10 leading-relaxed">
              Our team of experts is ready to help you implement cutting-edge technology solutions tailored to your specific industry needs and challenges.
            </p>
            
            <div className="flex flex-wrap gap-4">
              <Link 
                href="/contact"
                className="px-6 py-3 bg-gradient-to-r from-cyan-500 to-purple-600 rounded-lg text-white font-medium 
                        hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-300 flex items-center"
              >
                <span>Schedule a Consultation</span>
                <svg className="ml-2 w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                </svg>
              </Link>
              
              <Link 
                href="/case-studies"
                className="px-6 py-3 bg-gray-900 border border-gray-700 rounded-lg text-white font-medium 
                        hover:bg-gray-800 hover:border-gray-600 transition-all duration-300"
              >
                View Case Studies
              </Link>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
);

export default function IndustryPage() {
  const [isLoaded, setIsLoaded] = useState(false);
  const [isMobile, setIsMobile] = useState(false);
  
  useEffect(() => {
    setIsLoaded(true);
    
    // Check if device is mobile/touch (don't show custom cursor on touch devices)
    const checkMobile = () => {
      setIsMobile(window.matchMedia("(max-width: 768px)").matches || 
                 'ontouchstart' in window || 
                 navigator.maxTouchPoints > 0);
    };
    
    checkMobile();
    window.addEventListener('resize', checkMobile);
    
    return () => {
      window.removeEventListener('resize', checkMobile);
    };
  }, []);

  return (
    <div className="min-h-screen font-[family-name:var(--font-geist-sans)] bg-black text-white overflow-x-hidden">
      {isLoaded && !isMobile && <AICursor />}
      
      {/* Hide default cursor when custom cursor is active */}
      {isLoaded && !isMobile && (
        <style jsx global>{`
          body {
            cursor: none !important;
          }
          a, button, [role="button"], input[type="submit"], input[type="button"] {
            cursor: none !important;
          }
        `}</style>
      )}
      
      <Header />
      <ScrollIndicator />
      
      <main className="overflow-x-hidden">
        <TechHero />
        
        {/* Healthcare Section */}
        <IndustrySection
          title="Healthcare Industry"
          subtitle="AI & Blockchain-Powered Innovations"
          description="At InnoSphere Labs (ISLABS), we are revolutionizing healthcare IT with AI-driven automation, blockchain security, and next-gen interoperability solutions. Our expertise extends across hospitals, diagnostic labs, and healthcare providers, ensuring efficiency, compliance, and patient-centric innovations."
          features={[]}
          gradient="from-cyan-400 to-blue-600"
          icon="🏥"
          index={1}
        />

        {/* LIS Section */}
        <IndustrySection
          title="Laboratory Information System (LIS)"
          subtitle="AI & Blockchain-Powered Lab Management"
          features={[
            "AI-Powered Lab Workflow Automation",
            "Blockchain-Powered Data Security & Compliance",
            "Interoperability & Seamless Integrations",
            "AI-Powered Diagnostic Insights & Predictive Analytics",
            "HIPAA, GDPR, and CAP (College of American Pathologists) standards."
          ]}
          gradient="from-blue-400 to-cyan-600"
          bgGradient="from-cyan-900/20 to-black/50"
          icon="🧪"
          index={2}
        />

        {/* CareSync Section */}
        <IndustrySection
          title="CareSync"
          subtitle="AI-Driven Nurse Acuity & Scheduling"
          features={[
            "AI-powered shift scheduling based on patient acuity & nurse skill levels.",
            "Predictive workload balancing to reduce burnout & improve patient care.",
            "Real-time integration with HIS, EMR, and Payroll systems via FHIR & HL7 APIs."
          ]}
          gradient="from-cyan-500 to-teal-600"
          bgGradient="from-teal-900/20 to-black/50"
          icon="👩‍⚕️"
          index={3}
        />

        {/* DocChain Section */}
        <IndustrySection
          title="AI-Powered Medical Document Management (DocChain)"
          subtitle="Intelligent Document Processing for Healthcare"
          features={[
            "OCR-based digital transformation of prescriptions, patient records, and medical reports.",
            "Blockchain-powered EHR security ensuring tamper-proof records & patient data privacy.",
            "Automated AI-driven document classification, tagging, and summarization."
          ]}
          gradient="from-teal-400 to-blue-600"
          bgGradient="from-blue-900/20 to-black/50"
          icon="📄"
          index={4}
        />

        {/* Education Section */}
        <IndustrySection
          title="Education"
          subtitle="AI & Blockchain-Powered Smart Learning Solutions"
          description="We empower educational institutions with intelligent automation and blockchain-secured systems to modernize learning and administration"
          features={[
            "AI-Powered Exam Generation & Grading (AI-QGEN)",
            "Blockchain-Based Digital Certificates & Academic Records",
            "Student Access & Gate Pass Management (UniPass)",
            "Personalized Learning & AI-Powered Chatbots"
          ]}
          impact="Streamlined administration, improved student engagement, and enhanced security of academic credentials."
          gradient="from-purple-400 to-indigo-600"
          bgGradient="from-indigo-900/20 to-black/50"
          icon="🎓"
          index={5}
        />

        {/* Supply Chain Section */}
        <IndustrySection
          title="Supply Chain & Logistics"
          subtitle="Intelligent, Blockchain-Powered Supply Chain Optimization"
          description="ISLABS enables real-time tracking, smart contracts, and AI-powered analytics to optimize supply chain operations:"
          features={[
            "AI & IoT-Driven Predictive Logistics & Demand Forecasting",
            "Blockchain-Powered Supply Chain Traceability",
            "Smart Procurement & Vendor Risk Assessment (ProcureSense)",
            "Real-Time Shipment Tracking & Condition Monitoring"
          ]}
          impact="Enhanced visibility, fraud prevention, and operational cost reduction."
          gradient="from-green-400 to-cyan-600"
          bgGradient="from-green-900/20 to-black/50"
          icon="🚚"
          index={6}
        />

        {/* Retail Section */}
        <IndustrySection
          title="Retail & E-commerce"
          subtitle="Personalized, AI-Powered Retail Transformation"
          description="We help retailers and e-commerce businesses deliver personalized shopping experiences, fraud prevention, and AI-driven insights:"
          features={[
            "AI-Powered Customer Behavior Analysis & Personalized Recommendations",
            "AI Chatbots & Conversational AI for Customer Engagement",
            "Blockchain-Based Digital Receipts & Fraud Prevention",
            "AI-Driven Demand Forecasting & Inventory Optimization"
          ]}
          impact="Increased sales, enhanced customer engagement, and streamlined inventory management."
          gradient="from-pink-400 to-purple-600"
          bgGradient="from-purple-900/20 to-black/50"
          icon="🛍️"
          index={7}
        />
        
        {/* CTA Section */}
        <TechCTA />
      </main>
      
      <motion.footer
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        viewport={{ once: true }}
        transition={{ duration: 1 }}
      >
        <Contact />
        <Footer />
      </motion.footer>
    </div>
  );
}
